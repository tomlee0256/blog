---
layout: post
title:  "各种常用编码"
date:   2014-04-13 12:19:56
categories: JavaScript
---
![utf8]({{ site.url }}/assets/images/utf8.gif)	

##Unicode
---
Unicode是一个符号集，规定了大部分语言中符号的二进制代码表示；
###Little endian和Big endian
Unicode码可以采用UCS-2格式直接存储。以汉字"严"为例，Unicode码是4E25，需要用两个字节存储，一个字节是4E，另一个字节是25。存储的时候，4E在前，25在后，就是Big endian方式；25在前，4E在后，就是Little endian方式。

##ASCII码
---
规定了英文字母符号的二进制代码表示，Unicode的子集；

##UTF-8
---
Unicode规定了符号的二进制代码，**没规定**这些符号的二进制代码如何存储和读取(没法知道前n个字节到底表示了几个符号)；

UTF-8是规定Unicode二进制如何存储和读取**一个**实现方式；

UTF-8的编码规则：

1.对于单字节的符号，字节的第一位设为0，后面7位为这个符号的unicode码。因此对于英语字母，UTF-8编码和ASCII码是相同的。

2.对于n字节的符号（n>1），第一个字节的前n位都设为1，第n+1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，顺序填充这个符号的unicode二进制码。
<pre>
Unicode符号范围      | UTF-8编码方式
 (十六进制)          | （二进制）
--------------------+---------------------------------------------
0000 0000-0000 007F | 0xsxxxxxx
0000 0080-0000 07FF | 110xxxxx 10xxxxxx
0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
</pre>

以汉字"严"为例，演示如何实现UTF-8编码:

已知"严"的unicode是4E25（100111000100101），根据上表，可以发现4E25处在第三行的范围内（0000 0800-0000 FFFF），因此"严"的UTF-8编码需要三个字节，即格式是"1110xxxx 10xxxxxx 10xxxxxx"。然后，从"严"的最后一个二进制位开始，依次从后向前填入格式中的x，多出的位补0。这样就得到了，"严"的UTF-8编码是"11100100 10111000 10100101"，转换成十六进制就是E4B8A5。

##Base64
---
是把二进制数据表示为统一的一组字符的一种实现方式。

或者说：

以统一的一组字符来表示二进制数据的一种实现方式。

###优点：

1.所有的二进制文件，都可以因此转化为可打印的文本编码，使用文本软件进行编辑。

2.能够对文本进行简单的加密。

###二进制 to Base64：
1.将每三个字节作为一组，一共是24个二进制位。

2.将这24个二进制位分为四组，每个组有6个二进制位。

3.在每组前面加两个00，扩展成32个二进制位，即四个字节。

4.根据下表，得到扩展后的每个字节的对应符号，这就是Base64的编码值。
<pre>
    0　A　　17　R　　　34　i　　　51　z
　　1　B　　18　S　　　35　j　　　52　0
　　2　C　　19　T　　　36　k　　　53　1
　　3　D　　20　U　　　37　l　　　54　2
　　4　E　　21　V　　　38　m　　　55　3
　　5　F　　22　W　　　39　n　　　56　4
　　6　G　　23　X　　　40　o　　　57　5
　　7　H　　24　Y　　　41　p　　　58　6
　　8　I　　25　Z　　　42　q　　　59　7
　　9　J　　26　a　　　43　r　　　60　8
　　10　K　 27　b　　　44　s　　　61　9
　　11　L　 28　c　　　45　t　　　62　+
　　12　M　 29　d　　　46　u　　　63　/
　　13　N　 30　e　　　47　v
　　14　O　 31　f　　　48　w　　　
　　15　P　 32　g　　　49　x
　　16　Q　 33　h　　　50　y
</pre>
###实例：
![041301]({{ site.url }}/assets/images/041301.png)	
###字节数不足三：
1.二个字节的情况：将这二个字节的一共16个二进制位，按照上面的规则，转成三组，最后一组除了前面加两个0以外，后面也要加两个0。这样得到一个三位的Base64编码，再在末尾补上一个"="号。
比如，"Ma"这个字符串是两个字节，可以转化成三组00010011、00010110、00010000以后，对应Base64值分别为T、W、E，再补上一个"="号，因此"Ma"的Base64编码就是TWE=。

2.一个字节的情况：将这一个字节的8个二进制位，按照上面的规则转成二组，最后一组除了前面加二个0以外，后面再加4个0。这样得到一个二位的Base64编码，再在末尾补上两个"="号。
比如，"M"这个字母是一个字节，可以转化为二组00010011、00010000，对应的Base64值分别为T、Q，再补上二个"="号，因此"M"的Base64编码就是TQ==。

因为，Base64将1 or 2 or 3个字节转化成四个字节，因此Base64编码后的文本，会比原文本 >= 三分之一左右。

##JavaScript中字符串默认编码
---
When a String contains actual textual data, each element is considered to be a single **UTF-16** code unit. 



<br/>
##更多阅读
1.[http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html](http://www.ruanyifeng.com/blog/2007/10/ascii_unicode_and_utf-8.html)

2.[http://www.ruanyifeng.com/blog/2008/06/base64.html](http://www.ruanyifeng.com/blog/2008/06/base64.html)

3.[Ecma-262.pdf](http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf) page:29